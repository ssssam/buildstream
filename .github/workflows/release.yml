name: Release actions

on:
  push:
    tags:
    - '*.*.*'

jobs:
  build_docs:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # BuildStream requires tags to be able to find its version.
        with:
          fetch-depth: 0

      - name: Give `testuser` ownership of the source directory
        run: sudo chown -R 1000:1000 ${GITHUB_WORKSPACE}

      - name: Build documentation using Docker Compose
        run: |
          docker-compose \
            --env-file ${GITHUB_WORKSPACE}/.github/common.env \
            --file ${GITHUB_WORKSPACE}/.github/compose/ci.docker-compose.yml \
            run \
            docs

          # Restore permissions to the current user
          sudo chown -R ${USER} ${GITHUB_WORKSPACE}

          tar -C doc/build/html -zcf docs.tgz .

      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.tgz

  build_sdist:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.1

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  upload_github_release:
    name: Upload GitHub release assets
    needs: [build_docs]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Upload release assets
        run: |
          tag_name="${GITHUB_REF##*/}"
          hub release create -a "docs.tgz" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_pypi_release:
    name: Upload TEST PyPI release assets
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
